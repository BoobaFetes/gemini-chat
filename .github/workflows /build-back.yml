# This workflow will build a .NET and a webpack projects and is made from "Deploy a .NET Core app to an Azure Web App" template
# see templates here: https://github.com/BoobaFetes/gemini-chat/actions/new
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net


name: back-workflow

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  # azure-webapps-dotnet-core template :
  AZURE_WEBAPP_NAME: gemini-chat-web-app    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'            # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '9.x.x'                   # set this to the .NET Core version to use

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up dotnet environement
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Set up dotnet dependency caching for faster builds
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: dotnet - install nugget packages
      run: dotnet restaure
    
    - name: dotnet - build
      run: dotnet build --no-restore
      
    - name: dotnet - test
      run: dotnet test --no-build --verbosity normal 
    
    - name: dotnet - publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/back
    
    - name: dotnet - upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/back
